{"version":3,"sources":["reportWebVitals.js","index.js","App.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById","useState","result","setResult","inputRef","useRef","useEffect","current","focus","handleClick","e","concat","target","name","backSpace","slice","clear","calculate","eval","toString","className","type","value","ref","id","onClick"],"mappings":"0LAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAA,EAAD,MAEFC,SAASC,eAAe,SAM1Bd,K,unBCdA,SAASY,MAAO,IAAD,UAEeG,oDAAS,IAFxB,oNAENC,OAFM,cAEEC,UAFF,cAGPC,SAAWC,kDAAO,MAExBC,sDAAU,kBAAMF,SAASG,QAAQC,WAEjC,IAAMC,YAAc,SAAAC,GAClBP,UAAUD,OAAOS,OAAOD,EAAEE,OAAOC,QAG7BC,UAAY,WAChBX,UAAUD,OAAOa,MAAM,GAAK,KAGxBC,MAAQ,kBAAMb,UAAU,KAExBc,UAAY,SAAZA,YACJ,IACEd,UAAUe,KAAKhB,QAAQiB,YACvB,eACAhB,UAAU,WAId,OACE,mEAAKiB,UAAW,WAAhB,UACE,4EACE,oEAAOC,KAAK,OAAOC,MAAOpB,OAAQqB,IAAKnB,aAEzC,mEAAKgB,UAAU,SAAf,UACE,qEAAQI,GAAG,QAAQC,QAAST,MAA5B,mBACA,qEAAQQ,GAAG,YAAYC,QAASX,UAAhC,eACA,qEAAQD,KAAK,IAAIY,QAAShB,YAA1B,eACA,qEAAQI,KAAK,IAAIY,QAAShB,YAA1B,eACA,qEAAQI,KAAK,IAAIY,QAAShB,YAA1B,eACA,qEAAQI,KAAK,IAAIY,QAAShB,YAA1B,eACA,qEAAQI,KAAK,IAAIY,QAAShB,YAA1B,eACA,qEAAQI,KAAK,IAAIY,QAAShB,YAA1B,eACA,qEAAQI,KAAK,IAAIY,QAAShB,YAA1B,eACA,qEAAQI,KAAK,IAAIY,QAAShB,YAA1B,eACA,qEAAQI,KAAK,IAAIY,QAAShB,YAA1B,kBACA,qEAAQI,KAAK,IAAIY,QAAShB,YAA1B,eACA,qEAAQI,KAAK,IAAIY,QAAShB,YAA1B,eACA,qEAAQI,KAAK,IAAIY,QAAShB,YAA1B,eACA,qEAAQI,KAAK,IAAIY,QAAShB,YAA1B,eACA,qEAAQI,KAAK,IAAIY,QAAShB,YAA1B,eACA,qEAAQI,KAAK,IAAIY,QAAShB,YAA1B,eACA,qEAAQe,GAAG,SAASC,QAASR,UAA7B,0BAMOnB,4B","file":"static/js/main.34675d4f.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import {useState, useEffect, useRef}  from 'react';\n\nfunction App() {\n\n  const [result, setResult] = useState('');\n  const inputRef = useRef(null)\n\n  useEffect(() => inputRef.current.focus())\n\n  const handleClick = e => {\n    setResult(result.concat(e.target.name))\n  }\n\n  const backSpace = () => {\n    setResult(result.slice(0, - 1))\n  }\n\n  const clear = () => setResult('')\n\n  const calculate = () => {\n    try{\n      setResult(eval(result).toString())\n    } catch{\n      setResult('Error')\n    }\n  }\n\n  return (\n    <div className =\"calc-app\">\n      <form>\n        <input type=\"text\" value={result} ref={inputRef} />\n      </form>\n      <div className=\"keypad\">\n        <button id=\"clear\" onClick={clear}>Clear</button>\n        <button id=\"backSpace\" onClick={backSpace}>C</button>\n        <button name=\"+\" onClick={handleClick}>+</button>\n        <button name=\"7\" onClick={handleClick}>7</button>\n        <button name=\"8\" onClick={handleClick}>8</button>\n        <button name=\"9\" onClick={handleClick}>9</button>\n        <button name=\"-\" onClick={handleClick}>-</button>\n        <button name=\"4\" onClick={handleClick}>4</button>\n        <button name=\"5\" onClick={handleClick}>5</button>\n        <button name=\"6\" onClick={handleClick}>6</button>\n        <button name=\"*\" onClick={handleClick}>&times;</button>\n        <button name=\"1\" onClick={handleClick}>1</button>\n        <button name=\"2\" onClick={handleClick}>2</button>\n        <button name=\"3\" onClick={handleClick}>3</button>\n        <button name=\"/\" onClick={handleClick}>/</button>\n        <button name=\"0\" onClick={handleClick}>0</button>\n        <button name=\".\" onClick={handleClick}>.</button>\n        <button id=\"result\" onClick={calculate}>Result</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"sourceRoot":""}